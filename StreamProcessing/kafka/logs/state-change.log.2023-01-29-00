[2023-01-29 00:00:40,565] INFO [Broker id=2] Add 0 partitions and deleted 1 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 33 (state.change.logger)
[2023-01-29 00:00:46,216] INFO [Broker id=2] Add 0 partitions and deleted 3 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 34 (state.change.logger)
[2023-01-29 00:00:46,241] INFO [Broker id=2] Handling StopReplica request correlationId 35 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:00:46,244] INFO [Broker id=2] Handling StopReplica request correlationId 36 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:00:50,697] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 37 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:00:50,698] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 37 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:00:50,703] INFO [Broker id=2] Leader prescriptions-0 with topic id Some(6Kw61Nt4QcSRpOYW4S248Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:00:50,707] INFO [Broker id=2] Finished LeaderAndIsr request in 10ms correlationId 37 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:00:50,708] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 38 (state.change.logger)
[2023-01-29 00:00:54,786] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 39 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:00:54,788] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 39 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:00:54,795] INFO [Broker id=2] Leader prescriptionsDispatched-0 with topic id Some(CVI6_9Y6QTaoCr96xuKIeA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:00:54,812] INFO [Broker id=2] Follower prescriptionsDispatched-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:00:54,817] INFO [Broker id=2] Follower prescriptionsDispatched-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 0. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:00:54,817] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 3 with correlation id 39 for 2 partitions (state.change.logger)
[2023-01-29 00:00:54,823] INFO [Broker id=2] Finished LeaderAndIsr request in 37ms correlationId 39 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:00:54,824] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 40 (state.change.logger)
[2023-01-29 00:07:26,135] INFO [Broker id=2] Add 0 partitions and deleted 1 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 41 (state.change.logger)
[2023-01-29 00:07:26,139] INFO [Broker id=2] Handling StopReplica request correlationId 42 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:07:26,140] INFO [Broker id=2] Handling StopReplica request correlationId 43 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:07:30,911] INFO [Broker id=2] Add 0 partitions and deleted 3 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 44 (state.change.logger)
[2023-01-29 00:07:30,926] INFO [Broker id=2] Handling StopReplica request correlationId 45 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:07:30,928] INFO [Broker id=2] Handling StopReplica request correlationId 46 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:07:35,196] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 47 (state.change.logger)
[2023-01-29 00:07:55,588] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 48 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:07:55,590] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 48 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:07:55,601] INFO [Broker id=2] Leader prescriptionsDispatched-1 with topic id Some(AR3XjkU8SSek8wnDaSbW1Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,0,1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:07:55,614] INFO [Broker id=2] Follower prescriptionsDispatched-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 0. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:07:55,622] INFO [Broker id=2] Follower prescriptionsDispatched-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:07:55,622] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 3 with correlation id 48 for 2 partitions (state.change.logger)
[2023-01-29 00:07:55,628] INFO [Broker id=2] Finished LeaderAndIsr request in 40ms correlationId 48 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:07:55,630] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 49 (state.change.logger)
[2023-01-29 00:08:25,719] INFO [Broker id=2] Add 0 partitions and deleted 3 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 50 (state.change.logger)
[2023-01-29 00:08:25,735] INFO [Broker id=2] Handling StopReplica request correlationId 51 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:08:25,737] INFO [Broker id=2] Handling StopReplica request correlationId 52 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:08:34,197] INFO [Broker id=2] Add 0 partitions and deleted 1 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 53 (state.change.logger)
[2023-01-29 00:08:47,946] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 54 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:08:47,949] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 54 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:08:47,956] INFO [Broker id=2] Leader prescriptions-0 with topic id Some(ajFvZduoSwaDkAR6LSGj7w) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:08:47,961] INFO [Broker id=2] Finished LeaderAndIsr request in 15ms correlationId 54 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:08:47,962] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 55 (state.change.logger)
[2023-01-29 00:08:54,188] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 56 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:08:54,190] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 56 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:08:54,195] INFO [Broker id=2] Leader prescriptionsDispatched-0 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:08:54,208] INFO [Broker id=2] Follower prescriptionsDispatched-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:08:54,217] INFO [Broker id=2] Follower prescriptionsDispatched-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 0. Previous leader epoch was -1. (state.change.logger)
[2023-01-29 00:08:54,217] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 3 with correlation id 56 for 2 partitions (state.change.logger)
[2023-01-29 00:08:54,223] INFO [Broker id=2] Finished LeaderAndIsr request in 35ms correlationId 56 from controller 0 for 3 partitions (state.change.logger)
[2023-01-29 00:08:54,224] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 57 (state.change.logger)
[2023-01-29 00:59:44,408] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 58 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:59:44,413] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 58 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:59:44,416] INFO [Broker id=2] Leader prescriptionsDispatched-2 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 1 from offset 79 with partition epoch 1, high watermark 79, ISR [2,1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-01-29 00:59:44,426] INFO [Broker id=2] Finished LeaderAndIsr request in 19ms correlationId 58 from controller 0 for 1 partitions (state.change.logger)
[2023-01-29 00:59:44,427] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 59 (state.change.logger)
[2023-01-29 00:59:44,428] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 60 from controller 0 for 2 partitions (state.change.logger)
[2023-01-29 00:59:44,428] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 60 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:59:44,428] INFO [Broker id=2] Leader prescriptionsDispatched-0 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 1 from offset 94 with partition epoch 1, high watermark 94, ISR [2,1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-01-29 00:59:44,432] INFO [Broker id=2] Follower prescriptionsDispatched-1 starts at leader epoch 1 from offset 95 with partition epoch 1 and high watermark 95. Current leader is 1. Previous leader epoch was 0. (state.change.logger)
[2023-01-29 00:59:44,434] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 3 with correlation id 60 for 1 partitions (state.change.logger)
[2023-01-29 00:59:44,434] INFO [Broker id=2] Finished LeaderAndIsr request in 6ms correlationId 60 from controller 0 for 2 partitions (state.change.logger)
[2023-01-29 00:59:44,435] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 61 (state.change.logger)
[2023-01-29 00:59:44,792] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 4 partitions (state.change.logger)
[2023-01-29 00:59:44,793] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition prescriptionsDispatched-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,793] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition prescriptionsDispatched-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,793] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition prescriptionsDispatched-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,793] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition prescriptions-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,793] INFO [Broker id=2] Finished LeaderAndIsr request in 1ms correlationId 1 from controller 1 for 4 partitions (state.change.logger)
[2023-01-29 00:59:44,794] INFO [Broker id=2] Add 4 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-01-29 00:59:44,833] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 3 partitions (state.change.logger)
[2023-01-29 00:59:44,833] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 4 for partition prescriptionsDispatched-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,833] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 4 for partition prescriptionsDispatched-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,833] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 4 for partition prescriptionsDispatched-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:44,833] INFO [Broker id=2] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 1 for 3 partitions (state.change.logger)
[2023-01-29 00:59:44,834] INFO [Broker id=2] Add 54 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-01-29 00:59:46,391] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-01-29 00:59:46,392] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 4 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-01-29 00:59:46,392] INFO [Broker id=2] Leader prescriptionsDispatched-1 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 2 from offset 95 with partition epoch 2, high watermark 95, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-01-29 00:59:46,400] INFO [Broker id=2] Finished LeaderAndIsr request in 9ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-01-29 00:59:46,401] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-01-29 00:59:46,401] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 7 from controller 1 for 2 partitions (state.change.logger)
[2023-01-29 00:59:46,401] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 1 epoch 4 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-01-29 00:59:46,401] INFO [Broker id=2] Leader prescriptionsDispatched-0 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 2 from offset 94 with partition epoch 2, high watermark 94, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-01-29 00:59:46,407] INFO [Broker id=2] Leader prescriptionsDispatched-2 with topic id Some(qJrCbxkPQkmBp6lynO0WoA) starts at leader epoch 2 from offset 79 with partition epoch 2, high watermark 79, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-01-29 00:59:46,412] INFO [Broker id=2] Finished LeaderAndIsr request in 11ms correlationId 7 from controller 1 for 2 partitions (state.change.logger)
[2023-01-29 00:59:46,414] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-01-29 00:59:46,590] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-01-29 00:59:46,600] INFO [Controller id=2 epoch=5] Sending LeaderAndIsr request to broker 2 with 4 become-leader and 0 become-follower partitions (state.change.logger)
[2023-01-29 00:59:46,600] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet(2) for 4 partitions (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 4 partitions (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 5 for partition prescriptionsDispatched-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 5 for partition prescriptionsDispatched-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 5 for partition prescriptionsDispatched-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 5 for partition prescriptions-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,601] INFO [Broker id=2] Finished LeaderAndIsr request in 0ms correlationId 1 from controller 2 for 4 partitions (state.change.logger)
[2023-01-29 00:59:46,602] INFO [Broker id=2] Add 4 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 5 with correlation id 2 (state.change.logger)
[2023-01-29 00:59:46,657] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,657] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,657] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,657] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition prescriptionsBin-0 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,658] INFO [Controller id=2 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,660] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,660] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,660] INFO [Controller id=2 epoch=5] Partition prescriptionsDispatched-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-01-29 00:59:46,660] INFO [Controller id=2 epoch=5] Sending LeaderAndIsr request to broker 2 with 3 become-leader and 0 become-follower partitions (state.change.logger)
[2023-01-29 00:59:46,660] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet(2) for 54 partitions (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 3 partitions (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 5 for partition prescriptionsDispatched-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 5 for partition prescriptionsDispatched-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 5 for partition prescriptionsDispatched-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 2 for 3 partitions (state.change.logger)
[2023-01-29 00:59:46,661] INFO [Broker id=2] Add 54 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 5 with correlation id 4 (state.change.logger)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsBin-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsBin-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,678] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,679] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,680] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:270)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1520)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2526)
	at kafka.controller.KafkaController.process(KafkaController.scala:2571)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:46,681] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:48,146] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:48,146] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:48,146] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:48,146] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:48,147] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:53,176] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:53,176] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:53,176] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:53,176] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:53,176] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:58,192] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:58,193] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:58,193] ERROR [Controller id=2 epoch=5] Controller 2 epoch 5 failed to change state for partition prescriptionsDispatched-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition prescriptionsDispatched-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1346)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1308)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1308)
	at kafka.controller.KafkaController.process(KafkaController.scala:2557)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-01-29 00:59:58,193] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-01-29 00:59:58,193] INFO [Controller id=2 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
